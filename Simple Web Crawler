import java.util.Scanner;
import java.util.ArrayList;
import java.net.MalformedURLException;
import java.net.URL;
import java.io.IOException;

public class WebCrawler {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a starting URL: ");
        String startingURL = scanner.nextLine();
        scanner.close();
        
        crawler(startingURL);
    }

    public static void crawler(String startingURL) {
        ArrayList<String> listOfPendingURLs = new ArrayList<>();
        ArrayList<String> listOfTraversedURLs = new ArrayList<>();

        listOfPendingURLs.add(startingURL);

        while (!listOfPendingURLs.isEmpty() && listOfTraversedURLs.size() <= 100) {
            String urlString = listOfPendingURLs.remove(0);
            listOfTraversedURLs.add(urlString);
            System.out.println("Crawl " + urlString);

            ArrayList<String> subURL = getSubURLs(urlString);
            for (String s : subURL) {
                if (!listOfTraversedURLs.contains(s) && !listOfPendingURLs.contains(s))
                    listOfPendingURLs.add(s);
            }
        }
        System.out.println("The number of traversed URLs is: "+ listOfTraversedURLs.size());
        System.out.println("The number of pending URLs is: "+listOfPendingURLs.size());
    }

    public static ArrayList<String> getSubURLs(String urlString) {
        ArrayList<String> list = new ArrayList<>();
        try {
            URL url = new URL(urlString);
            Scanner input = new Scanner(url.openStream());

            int current = 0;
            while (input.hasNext()) {
                String line = input.nextLine();
                current = line.indexOf("http", current);
                while (current > 0) {
                    int endIndex = line.indexOf("\"", current);
                    if (endIndex > 0) {
                        list.add(line.substring(current, endIndex));
                        current = line.indexOf("http", endIndex);
                    } else {
                        current = -1;
                    }
                }
            }
            input.close();
        } catch (MalformedURLException e) {
            System.out.println("Invalid URL");
        } catch (IOException e) {
            System.out.println("Input/Output Error");
        } catch (Exception e) {
            System.out.println("Some other error");
        }

        return list;
    }
}
